<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="613.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="1588860530"><g><title>pthread_getattr_np@@GLIBC_2.32 (2,698,757 samples, 0.17%)</title><rect x="0.0000%" y="469" width="0.1699%" height="15" fill="rgb(227,0,7)" fg:x="13" fg:w="2698757"/><text x="0.2500%" y="479.50"></text></g><g><title>__getdelim (2,698,757 samples, 0.17%)</title><rect x="0.0000%" y="453" width="0.1699%" height="15" fill="rgb(217,0,24)" fg:x="13" fg:w="2698757"/><text x="0.2500%" y="463.50"></text></g><g><title>_IO_file_underflow@@GLIBC_2.2.5 (2,698,757 samples, 0.17%)</title><rect x="0.0000%" y="437" width="0.1699%" height="15" fill="rgb(221,193,54)" fg:x="13" fg:w="2698757"/><text x="0.2500%" y="447.50"></text></g><g><title>__read_nocancel (2,698,757 samples, 0.17%)</title><rect x="0.0000%" y="421" width="0.1699%" height="15" fill="rgb(248,212,6)" fg:x="13" fg:w="2698757"/><text x="0.2500%" y="431.50"></text></g><g><title>[unknown] (2,698,757 samples, 0.17%)</title><rect x="0.0000%" y="405" width="0.1699%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="2698757"/><text x="0.2500%" y="415.50"></text></g><g><title>[unknown] (2,698,757 samples, 0.17%)</title><rect x="0.0000%" y="389" width="0.1699%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="2698757"/><text x="0.2500%" y="399.50"></text></g><g><title>[unknown] (2,698,757 samples, 0.17%)</title><rect x="0.0000%" y="373" width="0.1699%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="2698757"/><text x="0.2500%" y="383.50"></text></g><g><title>[unknown] (2,698,757 samples, 0.17%)</title><rect x="0.0000%" y="357" width="0.1699%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="2698757"/><text x="0.2500%" y="367.50"></text></g><g><title>_ZN5tokio7runtime4park5Inner4park17hf0bf263000a16a5dE.llvm.13739700850460920165 (2,967,292 samples, 0.19%)</title><rect x="0.1699%" y="405" width="0.1868%" height="15" fill="rgb(218,30,26)" fg:x="2699156" fg:w="2967292"/><text x="0.4199%" y="415.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (2,967,292 samples, 0.19%)</title><rect x="0.1699%" y="389" width="0.1868%" height="15" fill="rgb(220,122,19)" fg:x="2699156" fg:w="2967292"/><text x="0.4199%" y="399.50"></text></g><g><title>syscall (2,967,292 samples, 0.19%)</title><rect x="0.1699%" y="373" width="0.1868%" height="15" fill="rgb(250,228,42)" fg:x="2699156" fg:w="2967292"/><text x="0.4199%" y="383.50"></text></g><g><title>[unknown] (2,967,292 samples, 0.19%)</title><rect x="0.1699%" y="357" width="0.1868%" height="15" fill="rgb(240,193,28)" fg:x="2699156" fg:w="2967292"/><text x="0.4199%" y="367.50"></text></g><g><title>[unknown] (2,967,292 samples, 0.19%)</title><rect x="0.1699%" y="341" width="0.1868%" height="15" fill="rgb(216,20,37)" fg:x="2699156" fg:w="2967292"/><text x="0.4199%" y="351.50"></text></g><g><title>[unknown] (2,967,292 samples, 0.19%)</title><rect x="0.1699%" y="325" width="0.1868%" height="15" fill="rgb(206,188,39)" fg:x="2699156" fg:w="2967292"/><text x="0.4199%" y="335.50"></text></g><g><title>[unknown] (2,967,292 samples, 0.19%)</title><rect x="0.1699%" y="309" width="0.1868%" height="15" fill="rgb(217,207,13)" fg:x="2699156" fg:w="2967292"/><text x="0.4199%" y="319.50"></text></g><g><title>[unknown] (2,967,292 samples, 0.19%)</title><rect x="0.1699%" y="293" width="0.1868%" height="15" fill="rgb(231,73,38)" fg:x="2699156" fg:w="2967292"/><text x="0.4199%" y="303.50"></text></g><g><title>[unknown] (2,967,291 samples, 0.19%)</title><rect x="0.1699%" y="277" width="0.1868%" height="15" fill="rgb(225,20,46)" fg:x="2699157" fg:w="2967291"/><text x="0.4199%" y="287.50"></text></g><g><title>[unknown] (2,967,291 samples, 0.19%)</title><rect x="0.1699%" y="261" width="0.1868%" height="15" fill="rgb(210,31,41)" fg:x="2699157" fg:w="2967291"/><text x="0.4199%" y="271.50"></text></g><g><title>[unknown] (2,967,291 samples, 0.19%)</title><rect x="0.1699%" y="245" width="0.1868%" height="15" fill="rgb(221,200,47)" fg:x="2699157" fg:w="2967291"/><text x="0.4199%" y="255.50"></text></g><g><title>[unknown] (2,791,895 samples, 0.18%)</title><rect x="0.1809%" y="229" width="0.1757%" height="15" fill="rgb(226,26,5)" fg:x="2874553" fg:w="2791895"/><text x="0.4309%" y="239.50"></text></g><g><title>[unknown] (2,791,895 samples, 0.18%)</title><rect x="0.1809%" y="213" width="0.1757%" height="15" fill="rgb(249,33,26)" fg:x="2874553" fg:w="2791895"/><text x="0.4309%" y="223.50"></text></g><g><title>[unknown] (2,791,895 samples, 0.18%)</title><rect x="0.1809%" y="197" width="0.1757%" height="15" fill="rgb(235,183,28)" fg:x="2874553" fg:w="2791895"/><text x="0.4309%" y="207.50"></text></g><g><title>[unknown] (2,601,108 samples, 0.16%)</title><rect x="0.1929%" y="181" width="0.1637%" height="15" fill="rgb(221,5,38)" fg:x="3065340" fg:w="2601108"/><text x="0.4429%" y="191.50"></text></g><g><title>[unknown] (2,601,108 samples, 0.16%)</title><rect x="0.1929%" y="165" width="0.1637%" height="15" fill="rgb(247,18,42)" fg:x="3065340" fg:w="2601108"/><text x="0.4429%" y="175.50"></text></g><g><title>__memmove_avx_unaligned_erms (9,833,255 samples, 0.62%)</title><rect x="1.7937%" y="373" width="0.6189%" height="15" fill="rgb(241,131,45)" fg:x="28499660" fg:w="9833255"/><text x="2.0437%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,839,343 samples, 0.93%)</title><rect x="1.7937%" y="389" width="0.9340%" height="15" fill="rgb(249,31,29)" fg:x="28499660" fg:w="14839343"/><text x="2.0437%" y="399.50"></text></g><g><title>malloc (5,006,088 samples, 0.32%)</title><rect x="2.4126%" y="373" width="0.3151%" height="15" fill="rgb(225,111,53)" fg:x="38332915" fg:w="5006088"/><text x="2.6626%" y="383.50"></text></g><g><title>_int_malloc (5,006,087 samples, 0.32%)</title><rect x="2.4126%" y="357" width="0.3151%" height="15" fill="rgb(238,160,17)" fg:x="38332916" fg:w="5006087"/><text x="2.6626%" y="367.50"></text></g><g><title>unlink_chunk.isra.0 (556,924 samples, 0.04%)</title><rect x="2.6926%" y="341" width="0.0351%" height="15" fill="rgb(214,148,48)" fg:x="42782079" fg:w="556924"/><text x="2.9426%" y="351.50"></text></g><g><title>_int_free_create_chunk (556,924 samples, 0.04%)</title><rect x="2.7277%" y="341" width="0.0351%" height="15" fill="rgb(232,36,49)" fg:x="43339003" fg:w="556924"/><text x="2.9777%" y="351.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1,070,621 samples, 0.07%)</title><rect x="2.7277%" y="389" width="0.0674%" height="15" fill="rgb(209,103,24)" fg:x="43339003" fg:w="1070621"/><text x="2.9777%" y="399.50"></text></g><g><title>_int_free (1,070,621 samples, 0.07%)</title><rect x="2.7277%" y="373" width="0.0674%" height="15" fill="rgb(229,88,8)" fg:x="43339003" fg:w="1070621"/><text x="2.9777%" y="383.50"></text></g><g><title>_int_free_merge_chunk (1,070,621 samples, 0.07%)</title><rect x="2.7277%" y="357" width="0.0674%" height="15" fill="rgb(213,181,19)" fg:x="43339003" fg:w="1070621"/><text x="2.9777%" y="367.50"></text></g><g><title>unlink_chunk.isra.0 (513,697 samples, 0.03%)</title><rect x="2.7627%" y="341" width="0.0323%" height="15" fill="rgb(254,191,54)" fg:x="43895927" fg:w="513697"/><text x="3.0127%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (12,830,566 samples, 0.81%)</title><rect x="2.9147%" y="357" width="0.8075%" height="15" fill="rgb(241,83,37)" fg:x="46310784" fg:w="12830566"/><text x="3.1647%" y="367.50"></text></g><g><title>game_of_life::conway::matrix::Matrix::factory (14,731,743 samples, 0.93%)</title><rect x="2.7951%" y="389" width="0.9272%" height="15" fill="rgb(233,36,39)" fg:x="44409624" fg:w="14731743"/><text x="3.0451%" y="399.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (12,830,583 samples, 0.81%)</title><rect x="2.9147%" y="373" width="0.8075%" height="15" fill="rgb(226,3,54)" fg:x="46310784" fg:w="12830583"/><text x="3.1647%" y="383.50"></text></g><g><title>game_of_life::conway::game::ConwayGame::update_living_cells (220,788,628 samples, 13.90%)</title><rect x="0.3566%" y="405" width="13.8960%" height="15" fill="rgb(245,192,40)" fg:x="5666448" fg:w="220788628"/><text x="0.6066%" y="415.50">game_of_life::conway:..</text></g><g><title>game_of_life::conway::neighbour::Neighbour::alive_neighbours (167,313,709 samples, 10.53%)</title><rect x="3.7223%" y="389" width="10.5304%" height="15" fill="rgb(238,167,29)" fg:x="59141367" fg:w="167313709"/><text x="3.9723%" y="399.50">game_of_life::c..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (4,685,926 samples, 0.29%)</title><rect x="15.5234%" y="373" width="0.2949%" height="15" fill="rgb(232,182,51)" fg:x="246644995" fg:w="4685926"/><text x="15.7734%" y="383.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hfe2638efd21ddcceE.llvm.11990262669575324590 (4,685,926 samples, 0.29%)</title><rect x="15.5234%" y="357" width="0.2949%" height="15" fill="rgb(231,60,39)" fg:x="246644995" fg:w="4685926"/><text x="15.7734%" y="367.50"></text></g><g><title>realloc (4,479,491 samples, 0.28%)</title><rect x="15.5364%" y="341" width="0.2819%" height="15" fill="rgb(208,69,12)" fg:x="246851430" fg:w="4479491"/><text x="15.7864%" y="351.50"></text></g><g><title>_int_realloc (4,479,215 samples, 0.28%)</title><rect x="15.5364%" y="325" width="0.2819%" height="15" fill="rgb(235,93,37)" fg:x="246851706" fg:w="4479215"/><text x="15.7864%" y="335.50"></text></g><g><title>_int_malloc (4,473,065 samples, 0.28%)</title><rect x="15.5368%" y="309" width="0.2815%" height="15" fill="rgb(213,116,39)" fg:x="246857856" fg:w="4473065"/><text x="15.7868%" y="319.50"></text></g><g><title>game_of_life::runner::Runner::state (24,875,874 samples, 1.57%)</title><rect x="14.2527%" y="405" width="1.5656%" height="15" fill="rgb(222,207,29)" fg:x="226455079" fg:w="24875874"/><text x="14.5027%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (21,332,089 samples, 1.34%)</title><rect x="14.4757%" y="389" width="1.3426%" height="15" fill="rgb(206,96,30)" fg:x="229998864" fg:w="21332089"/><text x="14.7257%" y="399.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,449,462 samples, 0.22%)</title><rect x="15.8748%" y="325" width="0.2171%" height="15" fill="rgb(218,138,4)" fg:x="252228799" fg:w="3449462"/><text x="16.1248%" y="335.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (3,449,462 samples, 0.22%)</title><rect x="15.8748%" y="309" width="0.2171%" height="15" fill="rgb(250,191,14)" fg:x="252228799" fg:w="3449462"/><text x="16.1248%" y="319.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3,768,421 samples, 0.24%)</title><rect x="15.8672%" y="341" width="0.2372%" height="15" fill="rgb(239,60,40)" fg:x="252108368" fg:w="3768421"/><text x="16.1172%" y="351.50"></text></g><g><title>syscall (198,528 samples, 0.01%)</title><rect x="16.0919%" y="325" width="0.0125%" height="15" fill="rgb(206,27,48)" fg:x="255678261" fg:w="198528"/><text x="16.3419%" y="335.50"></text></g><g><title>[unknown] (198,528 samples, 0.01%)</title><rect x="16.0919%" y="309" width="0.0125%" height="15" fill="rgb(225,35,8)" fg:x="255678261" fg:w="198528"/><text x="16.3419%" y="319.50"></text></g><g><title>[unknown] (198,528 samples, 0.01%)</title><rect x="16.0919%" y="293" width="0.0125%" height="15" fill="rgb(250,213,24)" fg:x="255678261" fg:w="198528"/><text x="16.3419%" y="303.50"></text></g><g><title>[unknown] (198,528 samples, 0.01%)</title><rect x="16.0919%" y="277" width="0.0125%" height="15" fill="rgb(247,123,22)" fg:x="255678261" fg:w="198528"/><text x="16.3419%" y="287.50"></text></g><g><title>[unknown] (198,528 samples, 0.01%)</title><rect x="16.0919%" y="261" width="0.0125%" height="15" fill="rgb(231,138,38)" fg:x="255678261" fg:w="198528"/><text x="16.3419%" y="271.50"></text></g><g><title>[unknown] (198,528 samples, 0.01%)</title><rect x="16.0919%" y="245" width="0.0125%" height="15" fill="rgb(231,145,46)" fg:x="255678261" fg:w="198528"/><text x="16.3419%" y="255.50"></text></g><g><title>[unknown] (198,528 samples, 0.01%)</title><rect x="16.0919%" y="229" width="0.0125%" height="15" fill="rgb(251,118,11)" fg:x="255678261" fg:w="198528"/><text x="16.3419%" y="239.50"></text></g><g><title>[unknown] (198,528 samples, 0.01%)</title><rect x="16.0919%" y="213" width="0.0125%" height="15" fill="rgb(217,147,25)" fg:x="255678261" fg:w="198528"/><text x="16.3419%" y="223.50"></text></g><g><title>[unknown] (198,528 samples, 0.01%)</title><rect x="16.0919%" y="197" width="0.0125%" height="15" fill="rgb(247,81,37)" fg:x="255678261" fg:w="198528"/><text x="16.3419%" y="207.50"></text></g><g><title>[unknown] (198,528 samples, 0.01%)</title><rect x="16.0919%" y="181" width="0.0125%" height="15" fill="rgb(209,12,38)" fg:x="255678261" fg:w="198528"/><text x="16.3419%" y="191.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (5,225,630 samples, 0.33%)</title><rect x="15.8428%" y="373" width="0.3289%" height="15" fill="rgb(227,1,9)" fg:x="251719737" fg:w="5225630"/><text x="16.0928%" y="383.50"></text></g><g><title>tokio::runtime::context::with_scheduler (5,214,448 samples, 0.33%)</title><rect x="15.8435%" y="357" width="0.3282%" height="15" fill="rgb(248,47,43)" fg:x="251730919" fg:w="5214448"/><text x="16.0935%" y="367.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (1,068,578 samples, 0.07%)</title><rect x="16.1044%" y="341" width="0.0673%" height="15" fill="rgb(221,10,30)" fg:x="255876789" fg:w="1068578"/><text x="16.3544%" y="351.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (1,068,578 samples, 0.07%)</title><rect x="16.1044%" y="325" width="0.0673%" height="15" fill="rgb(210,229,1)" fg:x="255876789" fg:w="1068578"/><text x="16.3544%" y="335.50"></text></g><g><title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (1,068,578 samples, 0.07%)</title><rect x="16.1044%" y="309" width="0.0673%" height="15" fill="rgb(222,148,37)" fg:x="255876789" fg:w="1068578"/><text x="16.3544%" y="319.50"></text></g><g><title>__GI___libc_write (1,068,578 samples, 0.07%)</title><rect x="16.1044%" y="293" width="0.0673%" height="15" fill="rgb(234,67,33)" fg:x="255876789" fg:w="1068578"/><text x="16.3544%" y="303.50"></text></g><g><title>[unknown] (1,068,578 samples, 0.07%)</title><rect x="16.1044%" y="277" width="0.0673%" height="15" fill="rgb(247,98,35)" fg:x="255876789" fg:w="1068578"/><text x="16.3544%" y="287.50"></text></g><g><title>[unknown] (1,068,578 samples, 0.07%)</title><rect x="16.1044%" y="261" width="0.0673%" height="15" fill="rgb(247,138,52)" fg:x="255876789" fg:w="1068578"/><text x="16.3544%" y="271.50"></text></g><g><title>[unknown] (1,068,578 samples, 0.07%)</title><rect x="16.1044%" y="245" width="0.0673%" height="15" fill="rgb(213,79,30)" fg:x="255876789" fg:w="1068578"/><text x="16.3544%" y="255.50"></text></g><g><title>[unknown] (1,060,507 samples, 0.07%)</title><rect x="16.1049%" y="229" width="0.0667%" height="15" fill="rgb(246,177,23)" fg:x="255884860" fg:w="1060507"/><text x="16.3549%" y="239.50"></text></g><g><title>[unknown] (861,979 samples, 0.05%)</title><rect x="16.1174%" y="213" width="0.0543%" height="15" fill="rgb(230,62,27)" fg:x="256083388" fg:w="861979"/><text x="16.3674%" y="223.50"></text></g><g><title>[unknown] (861,979 samples, 0.05%)</title><rect x="16.1174%" y="197" width="0.0543%" height="15" fill="rgb(216,154,8)" fg:x="256083388" fg:w="861979"/><text x="16.3674%" y="207.50"></text></g><g><title>[unknown] (861,979 samples, 0.05%)</title><rect x="16.1174%" y="181" width="0.0543%" height="15" fill="rgb(244,35,45)" fg:x="256083388" fg:w="861979"/><text x="16.3674%" y="191.50"></text></g><g><title>[unknown] (236,779 samples, 0.01%)</title><rect x="16.1568%" y="165" width="0.0149%" height="15" fill="rgb(251,115,12)" fg:x="256708588" fg:w="236779"/><text x="16.4068%" y="175.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (5,615,452 samples, 0.35%)</title><rect x="15.8183%" y="405" width="0.3534%" height="15" fill="rgb(240,54,50)" fg:x="251330953" fg:w="5615452"/><text x="16.0683%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (5,447,107 samples, 0.34%)</title><rect x="15.8289%" y="389" width="0.3428%" height="15" fill="rgb(233,84,52)" fg:x="251499298" fg:w="5447107"/><text x="16.0789%" y="399.50"></text></g><g><title>_ZN5tokio4sync15batch_semaphore9Semaphore18add_permits_locked17h166ea40fde2487a7E.llvm.16058760082733448285 (168,345 samples, 0.01%)</title><rect x="16.1717%" y="389" width="0.0106%" height="15" fill="rgb(207,117,47)" fg:x="256946409" fg:w="168345"/><text x="16.4217%" y="399.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (168,353 samples, 0.01%)</title><rect x="16.1717%" y="405" width="0.0106%" height="15" fill="rgb(249,43,39)" fg:x="256946405" fg:w="168353"/><text x="16.4217%" y="415.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (257,115,077 samples, 16.18%)</title><rect x="0.0000%" y="533" width="16.1824%" height="15" fill="rgb(209,38,44)" fg:x="13" fg:w="257115077"/><text x="0.2500%" y="543.50">__libc_start_main@@GLIBC_..</text></g><g><title>__libc_start_call_main (257,115,077 samples, 16.18%)</title><rect x="0.0000%" y="517" width="16.1824%" height="15" fill="rgb(236,212,23)" fg:x="13" fg:w="257115077"/><text x="0.2500%" y="527.50">__libc_start_call_main</text></g><g><title>main (257,115,077 samples, 16.18%)</title><rect x="0.0000%" y="501" width="16.1824%" height="15" fill="rgb(242,79,21)" fg:x="13" fg:w="257115077"/><text x="0.2500%" y="511.50">main</text></g><g><title>std::rt::lang_start_internal (257,115,077 samples, 16.18%)</title><rect x="0.0000%" y="485" width="16.1824%" height="15" fill="rgb(211,96,35)" fg:x="13" fg:w="257115077"/><text x="0.2500%" y="495.50">std::rt::lang_start_inter..</text></g><g><title>std::rt::lang_start::_{{closure}} (254,416,320 samples, 16.01%)</title><rect x="0.1699%" y="469" width="16.0125%" height="15" fill="rgb(253,215,40)" fg:x="2698770" fg:w="254416320"/><text x="0.4199%" y="479.50">std::rt::lang_start::_{{c..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (254,416,320 samples, 16.01%)</title><rect x="0.1699%" y="453" width="16.0125%" height="15" fill="rgb(211,81,21)" fg:x="2698770" fg:w="254416320"/><text x="0.4199%" y="463.50">std::sys::backtrace::__ru..</text></g><g><title>game_of_life::main (254,416,320 samples, 16.01%)</title><rect x="0.1699%" y="437" width="16.0125%" height="15" fill="rgb(208,190,38)" fg:x="2698770" fg:w="254416320"/><text x="0.4199%" y="447.50">game_of_life::main</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (254,416,320 samples, 16.01%)</title><rect x="0.1699%" y="421" width="16.0125%" height="15" fill="rgb(235,213,38)" fg:x="2698770" fg:w="254416320"/><text x="0.4199%" y="431.50">tokio::runtime::park::Cac..</text></g><g><title>_dl_start_final (391,441 samples, 0.02%)</title><rect x="16.1838%" y="517" width="0.0246%" height="15" fill="rgb(237,122,38)" fg:x="257138401" fg:w="391441"/><text x="16.4338%" y="527.50"></text></g><g><title>_dl_sysdep_start (391,441 samples, 0.02%)</title><rect x="16.1838%" y="501" width="0.0246%" height="15" fill="rgb(244,218,35)" fg:x="257138401" fg:w="391441"/><text x="16.4338%" y="511.50"></text></g><g><title>dl_platform_init (391,441 samples, 0.02%)</title><rect x="16.1838%" y="485" width="0.0246%" height="15" fill="rgb(240,68,47)" fg:x="257138401" fg:w="391441"/><text x="16.4338%" y="495.50"></text></g><g><title>init_cpu_features.constprop.0 (391,441 samples, 0.02%)</title><rect x="16.1838%" y="469" width="0.0246%" height="15" fill="rgb(210,16,53)" fg:x="257138401" fg:w="391441"/><text x="16.4338%" y="479.50"></text></g><g><title>update_active.constprop.0 (391,441 samples, 0.02%)</title><rect x="16.1838%" y="453" width="0.0246%" height="15" fill="rgb(235,124,12)" fg:x="257138401" fg:w="391441"/><text x="16.4338%" y="463.50"></text></g><g><title>_start (257,529,949 samples, 16.21%)</title><rect x="0.0000%" y="549" width="16.2085%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="257529949"/><text x="0.2500%" y="559.50">_start</text></g><g><title>_dl_start (414,871 samples, 0.03%)</title><rect x="16.1824%" y="533" width="0.0261%" height="15" fill="rgb(250,166,2)" fg:x="257115090" fg:w="414871"/><text x="16.4324%" y="543.50"></text></g><g><title>game-of-life (258,070,720 samples, 16.24%)</title><rect x="0.0000%" y="565" width="16.2425%" height="15" fill="rgb(242,216,29)" fg:x="0" fg:w="258070720"/><text x="0.2500%" y="575.50">game-of-life</text></g><g><title>clone3 (540,759 samples, 0.03%)</title><rect x="16.2085%" y="549" width="0.0340%" height="15" fill="rgb(230,116,27)" fg:x="257529961" fg:w="540759"/><text x="16.4585%" y="559.50"></text></g><g><title>start_thread (540,759 samples, 0.03%)</title><rect x="16.2085%" y="533" width="0.0340%" height="15" fill="rgb(228,99,48)" fg:x="257529961" fg:w="540759"/><text x="16.4585%" y="543.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (540,032 samples, 0.03%)</title><rect x="16.2085%" y="517" width="0.0340%" height="15" fill="rgb(253,11,6)" fg:x="257530688" fg:w="540032"/><text x="16.4585%" y="527.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (456,839 samples, 0.03%)</title><rect x="16.2138%" y="501" width="0.0288%" height="15" fill="rgb(247,143,39)" fg:x="257613881" fg:w="456839"/><text x="16.4638%" y="511.50"></text></g><g><title>pthread_getattr_np@@GLIBC_2.32 (334,340 samples, 0.02%)</title><rect x="16.2215%" y="485" width="0.0210%" height="15" fill="rgb(236,97,10)" fg:x="257736380" fg:w="334340"/><text x="16.4715%" y="495.50"></text></g><g><title>pthread_getaffinity_np@GLIBC_2.3.4 (257,031 samples, 0.02%)</title><rect x="16.2263%" y="469" width="0.0162%" height="15" fill="rgb(233,208,19)" fg:x="257813689" fg:w="257031"/><text x="16.4763%" y="479.50"></text></g><g><title>[unknown] (257,031 samples, 0.02%)</title><rect x="16.2263%" y="453" width="0.0162%" height="15" fill="rgb(216,164,2)" fg:x="257813689" fg:w="257031"/><text x="16.4763%" y="463.50"></text></g><g><title>[unknown] (257,031 samples, 0.02%)</title><rect x="16.2263%" y="437" width="0.0162%" height="15" fill="rgb(220,129,5)" fg:x="257813689" fg:w="257031"/><text x="16.4763%" y="447.50"></text></g><g><title>[unknown] (257,031 samples, 0.02%)</title><rect x="16.2263%" y="421" width="0.0162%" height="15" fill="rgb(242,17,10)" fg:x="257813689" fg:w="257031"/><text x="16.4763%" y="431.50"></text></g><g><title>[unknown] (257,031 samples, 0.02%)</title><rect x="16.2263%" y="405" width="0.0162%" height="15" fill="rgb(242,107,0)" fg:x="257813689" fg:w="257031"/><text x="16.4763%" y="415.50"></text></g><g><title>[unknown] (257,031 samples, 0.02%)</title><rect x="16.2263%" y="389" width="0.0162%" height="15" fill="rgb(251,28,31)" fg:x="257813689" fg:w="257031"/><text x="16.4763%" y="399.50"></text></g><g><title>[unknown] (257,031 samples, 0.02%)</title><rect x="16.2263%" y="373" width="0.0162%" height="15" fill="rgb(233,223,10)" fg:x="257813689" fg:w="257031"/><text x="16.4763%" y="383.50"></text></g><g><title>[unknown] (246,592 samples, 0.02%)</title><rect x="16.2425%" y="549" width="0.0155%" height="15" fill="rgb(215,21,27)" fg:x="258070720" fg:w="246592"/><text x="16.4925%" y="559.50"></text></g><g><title>&lt;crossterm::event::source::unix::mio::UnixInternalEventSource as crossterm::event::source::EventSource&gt;::try_read (162,778 samples, 0.01%)</title><rect x="16.2478%" y="533" width="0.0102%" height="15" fill="rgb(232,23,21)" fg:x="258154534" fg:w="162778"/><text x="16.4978%" y="543.50"></text></g><g><title>[unknown] (162,778 samples, 0.01%)</title><rect x="16.2478%" y="517" width="0.0102%" height="15" fill="rgb(244,5,23)" fg:x="258154534" fg:w="162778"/><text x="16.4978%" y="527.50"></text></g><g><title>__sched_yield (280,223 samples, 0.02%)</title><rect x="16.2613%" y="437" width="0.0176%" height="15" fill="rgb(226,81,46)" fg:x="258369636" fg:w="280223"/><text x="16.5113%" y="447.50"></text></g><g><title>[unknown] (280,223 samples, 0.02%)</title><rect x="16.2613%" y="421" width="0.0176%" height="15" fill="rgb(247,70,30)" fg:x="258369636" fg:w="280223"/><text x="16.5113%" y="431.50"></text></g><g><title>[unknown] (280,223 samples, 0.02%)</title><rect x="16.2613%" y="405" width="0.0176%" height="15" fill="rgb(212,68,19)" fg:x="258369636" fg:w="280223"/><text x="16.5113%" y="415.50"></text></g><g><title>[unknown] (280,223 samples, 0.02%)</title><rect x="16.2613%" y="389" width="0.0176%" height="15" fill="rgb(240,187,13)" fg:x="258369636" fg:w="280223"/><text x="16.5113%" y="399.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (422,942 samples, 0.03%)</title><rect x="16.2580%" y="453" width="0.0266%" height="15" fill="rgb(223,113,26)" fg:x="258317312" fg:w="422942"/><text x="16.5080%" y="463.50"></text></g><g><title>pow (1,062,854 samples, 0.07%)</title><rect x="16.6088%" y="357" width="0.0669%" height="15" fill="rgb(206,192,2)" fg:x="263889917" fg:w="1062854"/><text x="16.8588%" y="367.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (1,996,713 samples, 0.13%)</title><rect x="16.6756%" y="357" width="0.1257%" height="15" fill="rgb(241,108,4)" fg:x="264952775" fg:w="1996713"/><text x="16.9256%" y="367.50"></text></g><g><title>_ZN5tokio7runtime2io6driver6Driver4turn17hbe3133002dc4d264E.llvm.1134820848910455088 (20,103,398 samples, 1.27%)</title><rect x="17.2648%" y="309" width="1.2653%" height="15" fill="rgb(247,173,49)" fg:x="274313054" fg:w="20103398"/><text x="17.5148%" y="319.50"></text></g><g><title>mio::poll::Poll::poll (20,103,398 samples, 1.27%)</title><rect x="17.2648%" y="293" width="1.2653%" height="15" fill="rgb(224,114,35)" fg:x="274313054" fg:w="20103398"/><text x="17.5148%" y="303.50"></text></g><g><title>epoll_wait (20,103,398 samples, 1.27%)</title><rect x="17.2648%" y="277" width="1.2653%" height="15" fill="rgb(245,159,27)" fg:x="274313054" fg:w="20103398"/><text x="17.5148%" y="287.50"></text></g><g><title>[unknown] (20,103,398 samples, 1.27%)</title><rect x="17.2648%" y="261" width="1.2653%" height="15" fill="rgb(245,172,44)" fg:x="274313054" fg:w="20103398"/><text x="17.5148%" y="271.50"></text></g><g><title>[unknown] (19,708,258 samples, 1.24%)</title><rect x="17.2896%" y="245" width="1.2404%" height="15" fill="rgb(236,23,11)" fg:x="274708194" fg:w="19708258"/><text x="17.5396%" y="255.50"></text></g><g><title>[unknown] (19,708,258 samples, 1.24%)</title><rect x="17.2896%" y="229" width="1.2404%" height="15" fill="rgb(205,117,38)" fg:x="274708194" fg:w="19708258"/><text x="17.5396%" y="239.50"></text></g><g><title>[unknown] (16,688,745 samples, 1.05%)</title><rect x="17.4797%" y="213" width="1.0504%" height="15" fill="rgb(237,72,25)" fg:x="277727707" fg:w="16688745"/><text x="17.7297%" y="223.50"></text></g><g><title>[unknown] (10,600,866 samples, 0.67%)</title><rect x="17.8628%" y="197" width="0.6672%" height="15" fill="rgb(244,70,9)" fg:x="283815586" fg:w="10600866"/><text x="18.1128%" y="207.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h5e1d5ebc582710ecE.llvm.7959205451893968204 (24,624,606 samples, 1.55%)</title><rect x="17.2648%" y="325" width="1.5498%" height="15" fill="rgb(217,125,39)" fg:x="274313053" fg:w="24624606"/><text x="17.5148%" y="335.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (4,521,204 samples, 0.28%)</title><rect x="18.5300%" y="309" width="0.2846%" height="15" fill="rgb(235,36,10)" fg:x="294416455" fg:w="4521204"/><text x="18.7800%" y="319.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (4,520,217 samples, 0.28%)</title><rect x="18.5301%" y="293" width="0.2845%" height="15" fill="rgb(251,123,47)" fg:x="294417442" fg:w="4520217"/><text x="18.7801%" y="303.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (3,248,400 samples, 0.20%)</title><rect x="18.6101%" y="277" width="0.2044%" height="15" fill="rgb(221,13,13)" fg:x="295689259" fg:w="3248400"/><text x="18.8601%" y="287.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h899b20b00f39678aE.llvm.1134820848910455088 (3,248,400 samples, 0.20%)</title><rect x="18.6101%" y="261" width="0.2044%" height="15" fill="rgb(238,131,9)" fg:x="295689259" fg:w="3248400"/><text x="18.8601%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (32,422,187 samples, 2.04%)</title><rect x="16.8013%" y="357" width="2.0406%" height="15" fill="rgb(211,50,8)" fg:x="266949488" fg:w="32422187"/><text x="17.0513%" y="367.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (32,422,187 samples, 2.04%)</title><rect x="16.8013%" y="341" width="2.0406%" height="15" fill="rgb(245,182,24)" fg:x="266949488" fg:w="32422187"/><text x="17.0513%" y="351.50">t..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (434,016 samples, 0.03%)</title><rect x="18.8146%" y="325" width="0.0273%" height="15" fill="rgb(242,14,37)" fg:x="298937659" fg:w="434016"/><text x="19.0646%" y="335.50"></text></g><g><title>syscall (434,016 samples, 0.03%)</title><rect x="18.8146%" y="309" width="0.0273%" height="15" fill="rgb(246,228,12)" fg:x="298937659" fg:w="434016"/><text x="19.0646%" y="319.50"></text></g><g><title>[unknown] (434,016 samples, 0.03%)</title><rect x="18.8146%" y="293" width="0.0273%" height="15" fill="rgb(213,55,15)" fg:x="298937659" fg:w="434016"/><text x="19.0646%" y="303.50"></text></g><g><title>[unknown] (434,016 samples, 0.03%)</title><rect x="18.8146%" y="277" width="0.0273%" height="15" fill="rgb(209,9,3)" fg:x="298937659" fg:w="434016"/><text x="19.0646%" y="287.50"></text></g><g><title>[unknown] (434,016 samples, 0.03%)</title><rect x="18.8146%" y="261" width="0.0273%" height="15" fill="rgb(230,59,30)" fg:x="298937659" fg:w="434016"/><text x="19.0646%" y="271.50"></text></g><g><title>[unknown] (434,016 samples, 0.03%)</title><rect x="18.8146%" y="245" width="0.0273%" height="15" fill="rgb(209,121,21)" fg:x="298937659" fg:w="434016"/><text x="19.0646%" y="255.50"></text></g><g><title>[unknown] (434,016 samples, 0.03%)</title><rect x="18.8146%" y="229" width="0.0273%" height="15" fill="rgb(220,109,13)" fg:x="298937659" fg:w="434016"/><text x="19.0646%" y="239.50"></text></g><g><title>[unknown] (434,016 samples, 0.03%)</title><rect x="18.8146%" y="213" width="0.0273%" height="15" fill="rgb(232,18,1)" fg:x="298937659" fg:w="434016"/><text x="19.0646%" y="223.50"></text></g><g><title>[unknown] (434,015 samples, 0.03%)</title><rect x="18.8146%" y="197" width="0.0273%" height="15" fill="rgb(215,41,42)" fg:x="298937660" fg:w="434015"/><text x="19.0646%" y="207.50"></text></g><g><title>[unknown] (434,015 samples, 0.03%)</title><rect x="18.8146%" y="181" width="0.0273%" height="15" fill="rgb(224,123,36)" fg:x="298937660" fg:w="434015"/><text x="19.0646%" y="191.50"></text></g><g><title>[unknown] (434,015 samples, 0.03%)</title><rect x="18.8146%" y="165" width="0.0273%" height="15" fill="rgb(240,125,3)" fg:x="298937660" fg:w="434015"/><text x="19.0646%" y="175.50"></text></g><g><title>[unknown] (360,128 samples, 0.02%)</title><rect x="18.8192%" y="149" width="0.0227%" height="15" fill="rgb(205,98,50)" fg:x="299011547" fg:w="360128"/><text x="19.0692%" y="159.50"></text></g><g><title>_ZN5tokio7runtime9scheduler12multi_thread4park8Unparker6unpark17he2484c36ba916bbcE.llvm.13739700850460920165 (2,317,108 samples, 0.15%)</title><rect x="18.8419%" y="341" width="0.1458%" height="15" fill="rgb(205,185,37)" fg:x="299371675" fg:w="2317108"/><text x="19.0919%" y="351.50"></text></g><g><title>tokio::runtime::park::wake (1,892,476 samples, 0.12%)</title><rect x="19.0943%" y="277" width="0.1191%" height="15" fill="rgb(238,207,15)" fg:x="303382202" fg:w="1892476"/><text x="19.3443%" y="287.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1,892,476 samples, 0.12%)</title><rect x="19.0943%" y="261" width="0.1191%" height="15" fill="rgb(213,199,42)" fg:x="303382202" fg:w="1892476"/><text x="19.3443%" y="271.50"></text></g><g><title>syscall (1,892,476 samples, 0.12%)</title><rect x="19.0943%" y="245" width="0.1191%" height="15" fill="rgb(235,201,11)" fg:x="303382202" fg:w="1892476"/><text x="19.3443%" y="255.50"></text></g><g><title>[unknown] (1,892,476 samples, 0.12%)</title><rect x="19.0943%" y="229" width="0.1191%" height="15" fill="rgb(207,46,11)" fg:x="303382202" fg:w="1892476"/><text x="19.3443%" y="239.50"></text></g><g><title>[unknown] (1,892,476 samples, 0.12%)</title><rect x="19.0943%" y="213" width="0.1191%" height="15" fill="rgb(241,35,35)" fg:x="303382202" fg:w="1892476"/><text x="19.3443%" y="223.50"></text></g><g><title>[unknown] (1,892,476 samples, 0.12%)</title><rect x="19.0943%" y="197" width="0.1191%" height="15" fill="rgb(243,32,47)" fg:x="303382202" fg:w="1892476"/><text x="19.3443%" y="207.50"></text></g><g><title>[unknown] (1,892,476 samples, 0.12%)</title><rect x="19.0943%" y="181" width="0.1191%" height="15" fill="rgb(247,202,23)" fg:x="303382202" fg:w="1892476"/><text x="19.3443%" y="191.50"></text></g><g><title>[unknown] (1,892,476 samples, 0.12%)</title><rect x="19.0943%" y="165" width="0.1191%" height="15" fill="rgb(219,102,11)" fg:x="303382202" fg:w="1892476"/><text x="19.3443%" y="175.50"></text></g><g><title>[unknown] (1,892,476 samples, 0.12%)</title><rect x="19.0943%" y="149" width="0.1191%" height="15" fill="rgb(243,110,44)" fg:x="303382202" fg:w="1892476"/><text x="19.3443%" y="159.50"></text></g><g><title>[unknown] (1,892,476 samples, 0.12%)</title><rect x="19.0943%" y="133" width="0.1191%" height="15" fill="rgb(222,74,54)" fg:x="303382202" fg:w="1892476"/><text x="19.3443%" y="143.50"></text></g><g><title>[unknown] (1,892,476 samples, 0.12%)</title><rect x="19.0943%" y="117" width="0.1191%" height="15" fill="rgb(216,99,12)" fg:x="303382202" fg:w="1892476"/><text x="19.3443%" y="127.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::_{{closure}} (4,067,436 samples, 0.26%)</title><rect x="18.9878%" y="293" width="0.2560%" height="15" fill="rgb(226,22,26)" fg:x="301689399" fg:w="4067436"/><text x="19.2378%" y="303.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (482,157 samples, 0.03%)</title><rect x="19.2134%" y="277" width="0.0303%" height="15" fill="rgb(217,163,10)" fg:x="305274678" fg:w="482157"/><text x="19.4634%" y="287.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (242,566 samples, 0.02%)</title><rect x="19.2438%" y="277" width="0.0153%" height="15" fill="rgb(213,25,53)" fg:x="305756835" fg:w="242566"/><text x="19.4938%" y="287.50"></text></g><g><title>_ZN12game_of_life6runner3run46_$LT$impl$u20$game_of_life..runner..Runner$GT$3run28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hb0fc2834a9d3eaa4E.llvm.2868057869369755791 (11,545,047 samples, 0.73%)</title><rect x="18.9878%" y="309" width="0.7266%" height="15" fill="rgb(252,105,26)" fg:x="301689399" fg:w="11545047"/><text x="19.2378%" y="319.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (7,477,611 samples, 0.47%)</title><rect x="19.2438%" y="293" width="0.4706%" height="15" fill="rgb(220,39,43)" fg:x="305756835" fg:w="7477611"/><text x="19.4938%" y="303.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (7,235,045 samples, 0.46%)</title><rect x="19.2590%" y="277" width="0.4554%" height="15" fill="rgb(229,68,48)" fg:x="305999401" fg:w="7235045"/><text x="19.5090%" y="287.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (7,235,045 samples, 0.46%)</title><rect x="19.2590%" y="261" width="0.4554%" height="15" fill="rgb(252,8,32)" fg:x="305999401" fg:w="7235045"/><text x="19.5090%" y="271.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (7,235,045 samples, 0.46%)</title><rect x="19.2590%" y="245" width="0.4554%" height="15" fill="rgb(223,20,43)" fg:x="305999401" fg:w="7235045"/><text x="19.5090%" y="255.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (2,897,388 samples, 0.18%)</title><rect x="19.5321%" y="229" width="0.1824%" height="15" fill="rgb(229,81,49)" fg:x="310337058" fg:w="2897388"/><text x="19.7821%" y="239.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (2,897,388 samples, 0.18%)</title><rect x="19.5321%" y="213" width="0.1824%" height="15" fill="rgb(236,28,36)" fg:x="310337058" fg:w="2897388"/><text x="19.7821%" y="223.50"></text></g><g><title>&lt;&amp;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (2,897,388 samples, 0.18%)</title><rect x="19.5321%" y="197" width="0.1824%" height="15" fill="rgb(249,185,26)" fg:x="310337058" fg:w="2897388"/><text x="19.7821%" y="207.50"></text></g><g><title>__GI___libc_write (2,897,388 samples, 0.18%)</title><rect x="19.5321%" y="181" width="0.1824%" height="15" fill="rgb(249,174,33)" fg:x="310337058" fg:w="2897388"/><text x="19.7821%" y="191.50"></text></g><g><title>[unknown] (2,732,802 samples, 0.17%)</title><rect x="19.5424%" y="165" width="0.1720%" height="15" fill="rgb(233,201,37)" fg:x="310501644" fg:w="2732802"/><text x="19.7924%" y="175.50"></text></g><g><title>[unknown] (2,732,802 samples, 0.17%)</title><rect x="19.5424%" y="149" width="0.1720%" height="15" fill="rgb(221,78,26)" fg:x="310501644" fg:w="2732802"/><text x="19.7924%" y="159.50"></text></g><g><title>[unknown] (2,732,802 samples, 0.17%)</title><rect x="19.5424%" y="133" width="0.1720%" height="15" fill="rgb(250,127,30)" fg:x="310501644" fg:w="2732802"/><text x="19.7924%" y="143.50"></text></g><g><title>[unknown] (2,732,802 samples, 0.17%)</title><rect x="19.5424%" y="117" width="0.1720%" height="15" fill="rgb(230,49,44)" fg:x="310501644" fg:w="2732802"/><text x="19.7924%" y="127.50"></text></g><g><title>[unknown] (2,732,802 samples, 0.17%)</title><rect x="19.5424%" y="101" width="0.1720%" height="15" fill="rgb(229,67,23)" fg:x="310501644" fg:w="2732802"/><text x="19.7924%" y="111.50"></text></g><g><title>[unknown] (439,484 samples, 0.03%)</title><rect x="19.6867%" y="85" width="0.0277%" height="15" fill="rgb(249,83,47)" fg:x="312794962" fg:w="439484"/><text x="19.9367%" y="95.50"></text></g><g><title>[unknown] (191,113 samples, 0.01%)</title><rect x="19.7024%" y="69" width="0.0120%" height="15" fill="rgb(215,43,3)" fg:x="313043333" fg:w="191113"/><text x="19.9524%" y="79.50"></text></g><g><title>&lt;game_of_life::view::BasicPainter as core::default::Default&gt;::default (602,299 samples, 0.04%)</title><rect x="19.8757%" y="293" width="0.0379%" height="15" fill="rgb(238,154,13)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="303.50"></text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::with_options (602,299 samples, 0.04%)</title><rect x="19.8757%" y="277" width="0.0379%" height="15" fill="rgb(219,56,2)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="287.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::empty (602,299 samples, 0.04%)</title><rect x="19.8757%" y="261" width="0.0379%" height="15" fill="rgb(233,0,4)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="271.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (602,299 samples, 0.04%)</title><rect x="19.8757%" y="245" width="0.0379%" height="15" fill="rgb(235,30,7)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (602,299 samples, 0.04%)</title><rect x="19.8757%" y="229" width="0.0379%" height="15" fill="rgb(250,79,13)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="239.50"></text></g><g><title>[unknown] (602,299 samples, 0.04%)</title><rect x="19.8757%" y="213" width="0.0379%" height="15" fill="rgb(211,146,34)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="223.50"></text></g><g><title>[unknown] (602,299 samples, 0.04%)</title><rect x="19.8757%" y="197" width="0.0379%" height="15" fill="rgb(228,22,38)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="207.50"></text></g><g><title>[unknown] (602,299 samples, 0.04%)</title><rect x="19.8757%" y="181" width="0.0379%" height="15" fill="rgb(235,168,5)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="191.50"></text></g><g><title>[unknown] (602,299 samples, 0.04%)</title><rect x="19.8757%" y="165" width="0.0379%" height="15" fill="rgb(221,155,16)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="175.50"></text></g><g><title>[unknown] (602,299 samples, 0.04%)</title><rect x="19.8757%" y="149" width="0.0379%" height="15" fill="rgb(215,215,53)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="159.50"></text></g><g><title>[unknown] (602,299 samples, 0.04%)</title><rect x="19.8757%" y="133" width="0.0379%" height="15" fill="rgb(223,4,10)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="143.50"></text></g><g><title>[unknown] (602,299 samples, 0.04%)</title><rect x="19.8757%" y="117" width="0.0379%" height="15" fill="rgb(234,103,6)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="127.50"></text></g><g><title>[unknown] (602,299 samples, 0.04%)</title><rect x="19.8757%" y="101" width="0.0379%" height="15" fill="rgb(227,97,0)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="111.50"></text></g><g><title>[unknown] (602,299 samples, 0.04%)</title><rect x="19.8757%" y="85" width="0.0379%" height="15" fill="rgb(234,150,53)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="95.50"></text></g><g><title>[unknown] (602,299 samples, 0.04%)</title><rect x="19.8757%" y="69" width="0.0379%" height="15" fill="rgb(228,201,54)" fg:x="315796781" fg:w="602299"/><text x="20.1257%" y="79.50"></text></g><g><title>__memmove_avx_unaligned_erms (4,602,458 samples, 0.29%)</title><rect x="19.9243%" y="245" width="0.2897%" height="15" fill="rgb(222,22,37)" fg:x="316568566" fg:w="4602458"/><text x="20.1743%" y="255.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (6,193,810 samples, 0.39%)</title><rect x="19.9243%" y="261" width="0.3898%" height="15" fill="rgb(237,53,32)" fg:x="316568566" fg:w="6193810"/><text x="20.1743%" y="271.50"></text></g><g><title>malloc (1,591,352 samples, 0.10%)</title><rect x="20.2139%" y="245" width="0.1002%" height="15" fill="rgb(233,25,53)" fg:x="321171024" fg:w="1591352"/><text x="20.4639%" y="255.50"></text></g><g><title>_int_malloc (1,591,040 samples, 0.10%)</title><rect x="20.2139%" y="229" width="0.1001%" height="15" fill="rgb(210,40,34)" fg:x="321171336" fg:w="1591040"/><text x="20.4639%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,424,413 samples, 0.09%)</title><rect x="22.2825%" y="229" width="0.0896%" height="15" fill="rgb(241,220,44)" fg:x="354038469" fg:w="1424413"/><text x="22.5325%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40,756,974 samples, 2.57%)</title><rect x="20.3180%" y="245" width="2.5652%" height="15" fill="rgb(235,28,35)" fg:x="322824097" fg:w="40756974"/><text x="20.5680%" y="255.50">&lt;c..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,118,189 samples, 0.51%)</title><rect x="22.3722%" y="229" width="0.5109%" height="15" fill="rgb(210,56,17)" fg:x="355462882" fg:w="8118189"/><text x="22.6222%" y="239.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hfe2638efd21ddcceE.llvm.11990262669575324590 (8,118,189 samples, 0.51%)</title><rect x="22.3722%" y="213" width="0.5109%" height="15" fill="rgb(224,130,29)" fg:x="355462882" fg:w="8118189"/><text x="22.6222%" y="223.50"></text></g><g><title>realloc (8,118,189 samples, 0.51%)</title><rect x="22.3722%" y="197" width="0.5109%" height="15" fill="rgb(235,212,8)" fg:x="355462882" fg:w="8118189"/><text x="22.6222%" y="207.50"></text></g><g><title>_int_realloc (2,013,706 samples, 0.13%)</title><rect x="22.7564%" y="181" width="0.1267%" height="15" fill="rgb(223,33,50)" fg:x="361567365" fg:w="2013706"/><text x="23.0064%" y="191.50"></text></g><g><title>_int_malloc (1,873,796 samples, 0.12%)</title><rect x="22.7652%" y="165" width="0.1179%" height="15" fill="rgb(219,149,13)" fg:x="361707275" fg:w="1873796"/><text x="23.0152%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,675,833 samples, 0.11%)</title><rect x="22.8831%" y="245" width="0.1055%" height="15" fill="rgb(250,156,29)" fg:x="363581072" fg:w="1675833"/><text x="23.1331%" y="255.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hfe2638efd21ddcceE.llvm.11990262669575324590 (1,477,305 samples, 0.09%)</title><rect x="22.8956%" y="229" width="0.0930%" height="15" fill="rgb(216,193,19)" fg:x="363779600" fg:w="1477305"/><text x="23.1456%" y="239.50"></text></g><g><title>malloc (1,471,799 samples, 0.09%)</title><rect x="22.8960%" y="213" width="0.0926%" height="15" fill="rgb(216,135,14)" fg:x="363785106" fg:w="1471799"/><text x="23.1460%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (46,324,880 samples, 2.92%)</title><rect x="20.3141%" y="261" width="2.9156%" height="15" fill="rgb(241,47,5)" fg:x="322762376" fg:w="46324880"/><text x="20.5641%" y="271.50">&lt;a..</text></g><g><title>malloc (3,830,351 samples, 0.24%)</title><rect x="22.9886%" y="245" width="0.2411%" height="15" fill="rgb(233,42,35)" fg:x="365256905" fg:w="3830351"/><text x="23.2386%" y="255.50"></text></g><g><title>cfree@GLIBC_2.2.5 (2,659,869 samples, 0.17%)</title><rect x="23.2297%" y="245" width="0.1674%" height="15" fill="rgb(231,13,6)" fg:x="369087256" fg:w="2659869"/><text x="23.4797%" y="255.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2,020,692 samples, 0.13%)</title><rect x="23.6183%" y="213" width="0.1272%" height="15" fill="rgb(207,181,40)" fg:x="375261332" fg:w="2020692"/><text x="23.8683%" y="223.50"></text></g><g><title>&lt;ratatui::backend::crossterm::CrosstermBackend&lt;W&gt; as ratatui::backend::Backend&gt;::draw (16,473,254 samples, 1.04%)</title><rect x="23.2297%" y="261" width="1.0368%" height="15" fill="rgb(254,173,49)" fg:x="369087256" fg:w="16473254"/><text x="23.4797%" y="271.50"></text></g><g><title>crossterm::command::write_command_ansi (13,813,385 samples, 0.87%)</title><rect x="23.3971%" y="245" width="0.8694%" height="15" fill="rgb(221,1,38)" fg:x="371747125" fg:w="13813385"/><text x="23.6471%" y="255.50"></text></g><g><title>core::fmt::write (13,813,385 samples, 0.87%)</title><rect x="23.3971%" y="229" width="0.8694%" height="15" fill="rgb(206,124,46)" fg:x="371747125" fg:w="13813385"/><text x="23.6471%" y="239.50"></text></g><g><title>&lt;crossterm::command::write_command_ansi::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (8,278,486 samples, 0.52%)</title><rect x="23.7454%" y="213" width="0.5210%" height="15" fill="rgb(249,21,11)" fg:x="377282024" fg:w="8278486"/><text x="23.9954%" y="223.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (8,278,486 samples, 0.52%)</title><rect x="23.7454%" y="197" width="0.5210%" height="15" fill="rgb(222,201,40)" fg:x="377282024" fg:w="8278486"/><text x="23.9954%" y="207.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (8,278,486 samples, 0.52%)</title><rect x="23.7454%" y="181" width="0.5210%" height="15" fill="rgb(235,61,29)" fg:x="377282024" fg:w="8278486"/><text x="23.9954%" y="191.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2,399,139 samples, 0.15%)</title><rect x="24.1155%" y="165" width="0.1510%" height="15" fill="rgb(219,207,3)" fg:x="383161371" fg:w="2399139"/><text x="24.3655%" y="175.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,399,139 samples, 0.15%)</title><rect x="24.1155%" y="149" width="0.1510%" height="15" fill="rgb(222,56,46)" fg:x="383161371" fg:w="2399139"/><text x="24.3655%" y="159.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (7,079,503 samples, 0.45%)</title><rect x="24.3647%" y="229" width="0.4456%" height="15" fill="rgb(239,76,54)" fg:x="387121142" fg:w="7079503"/><text x="24.6147%" y="239.50"></text></g><g><title>core::slice::memchr::memchr_aligned (6,908,496 samples, 0.43%)</title><rect x="24.3755%" y="213" width="0.4348%" height="15" fill="rgb(231,124,27)" fg:x="387292149" fg:w="6908496"/><text x="24.6255%" y="223.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (6,401,690 samples, 0.40%)</title><rect x="24.9718%" y="197" width="0.4029%" height="15" fill="rgb(249,195,6)" fg:x="396767394" fg:w="6401690"/><text x="25.2218%" y="207.50"></text></g><g><title>core::slice::memchr::memchr_aligned (6,401,690 samples, 0.40%)</title><rect x="24.9718%" y="181" width="0.4029%" height="15" fill="rgb(237,174,47)" fg:x="396767394" fg:w="6401690"/><text x="25.2218%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16,521,845 samples, 1.04%)</title><rect x="24.8103%" y="213" width="1.0399%" height="15" fill="rgb(206,201,31)" fg:x="394200645" fg:w="16521845"/><text x="25.0603%" y="223.50"></text></g><g><title>malloc (7,553,406 samples, 0.48%)</title><rect x="25.3747%" y="197" width="0.4754%" height="15" fill="rgb(231,57,52)" fg:x="403169084" fg:w="7553406"/><text x="25.6247%" y="207.50"></text></g><g><title>_int_malloc (7,553,406 samples, 0.48%)</title><rect x="25.3747%" y="181" width="0.4754%" height="15" fill="rgb(248,177,22)" fg:x="403169084" fg:w="7553406"/><text x="25.6247%" y="191.50"></text></g><g><title>&lt;ratatui::text::line::Line as core::convert::From&lt;alloc::string::String&gt;&gt;::from (18,430,086 samples, 1.16%)</title><rect x="24.8103%" y="229" width="1.1600%" height="15" fill="rgb(215,211,37)" fg:x="394200645" fg:w="18430086"/><text x="25.0603%" y="239.50"></text></g><g><title>cfree@GLIBC_2.2.5 (1,908,241 samples, 0.12%)</title><rect x="25.8501%" y="213" width="0.1201%" height="15" fill="rgb(241,128,51)" fg:x="410722490" fg:w="1908241"/><text x="26.1001%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,388,017 samples, 0.15%)</title><rect x="25.9702%" y="229" width="0.1503%" height="15" fill="rgb(227,165,31)" fg:x="412630731" fg:w="2388017"/><text x="26.2202%" y="239.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h547ce37269670f9cE.llvm.11921630471840810098 (2,388,017 samples, 0.15%)</title><rect x="25.9702%" y="213" width="0.1503%" height="15" fill="rgb(228,167,24)" fg:x="412630731" fg:w="2388017"/><text x="26.2202%" y="223.50"></text></g><g><title>realloc (2,388,017 samples, 0.15%)</title><rect x="25.9702%" y="197" width="0.1503%" height="15" fill="rgb(228,143,12)" fg:x="412630731" fg:w="2388017"/><text x="26.2202%" y="207.50"></text></g><g><title>_int_realloc (2,388,017 samples, 0.15%)</title><rect x="25.9702%" y="181" width="0.1503%" height="15" fill="rgb(249,149,8)" fg:x="412630731" fg:w="2388017"/><text x="26.2202%" y="191.50"></text></g><g><title>_int_malloc (2,388,017 samples, 0.15%)</title><rect x="25.9702%" y="165" width="0.1503%" height="15" fill="rgb(243,35,44)" fg:x="412630731" fg:w="2388017"/><text x="26.2202%" y="175.50"></text></g><g><title>&lt;ratatui::text::text::Text as core::convert::From&lt;alloc::string::String&gt;&gt;::from (32,822,765 samples, 2.07%)</title><rect x="24.2665%" y="261" width="2.0658%" height="15" fill="rgb(246,89,9)" fg:x="385560510" fg:w="32822765"/><text x="24.5165%" y="271.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32,822,765 samples, 2.07%)</title><rect x="24.2665%" y="245" width="2.0658%" height="15" fill="rgb(233,213,13)" fg:x="385560510" fg:w="32822765"/><text x="24.5165%" y="255.50">&lt;..</text></g><g><title>malloc (3,364,527 samples, 0.21%)</title><rect x="26.1205%" y="229" width="0.2118%" height="15" fill="rgb(233,141,41)" fg:x="415018748" fg:w="3364527"/><text x="26.3705%" y="239.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::set_style (14,743,428 samples, 0.93%)</title><rect x="28.5064%" y="213" width="0.9279%" height="15" fill="rgb(239,167,4)" fg:x="452926756" fg:w="14743428"/><text x="28.7564%" y="223.50"></text></g><g><title>ratatui::buffer::cell::Cell::set_symbol (9,219,888 samples, 0.58%)</title><rect x="29.4343%" y="213" width="0.5803%" height="15" fill="rgb(209,217,16)" fg:x="467670184" fg:w="9219888"/><text x="29.6843%" y="223.50"></text></g><g><title>&lt;ratatui::widgets::block::Block as ratatui::widgets::WidgetRef&gt;::render_ref (29,070,810 samples, 1.83%)</title><rect x="28.2773%" y="229" width="1.8297%" height="15" fill="rgb(219,88,35)" fg:x="449286401" fg:w="29070810"/><text x="28.5273%" y="239.50">&lt;..</text></g><g><title>ratatui::widgets::block::Block::render_title_position (1,467,139 samples, 0.09%)</title><rect x="30.0146%" y="213" width="0.0923%" height="15" fill="rgb(220,193,23)" fg:x="476890072" fg:w="1467139"/><text x="30.2646%" y="223.50"></text></g><g><title>_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfold17h3d54eccf7af40c69E.llvm.2360750188275315397 (1,467,139 samples, 0.09%)</title><rect x="30.0146%" y="197" width="0.0923%" height="15" fill="rgb(230,90,52)" fg:x="476890072" fg:w="1467139"/><text x="30.2646%" y="207.50"></text></g><g><title>&lt;unicode_segmentation::grapheme::Graphemes as core::iter::traits::iterator::Iterator&gt;::next (379,441,267 samples, 23.88%)</title><rect x="31.7768%" y="213" width="23.8813%" height="15" fill="rgb(252,106,19)" fg:x="504889433" fg:w="379441267"/><text x="32.0268%" y="223.50">&lt;unicode_segmentation::grapheme::Graph..</text></g><g><title>unicode_segmentation::grapheme::GraphemeCursor::grapheme_category (10,389,301 samples, 0.65%)</title><rect x="55.0043%" y="197" width="0.6539%" height="15" fill="rgb(206,74,20)" fg:x="873941399" fg:w="10389301"/><text x="55.2543%" y="207.50"></text></g><g><title>unicode_segmentation::tables::grapheme::grapheme_category (6,410,295 samples, 0.40%)</title><rect x="55.2547%" y="181" width="0.4035%" height="15" fill="rgb(230,138,44)" fg:x="877920405" fg:w="6410295"/><text x="55.5047%" y="191.50"></text></g><g><title>__memmove_avx_unaligned_erms (3,264,867 samples, 0.21%)</title><rect x="55.6582%" y="213" width="0.2055%" height="15" fill="rgb(235,182,43)" fg:x="884330700" fg:w="3264867"/><text x="55.9082%" y="223.50"></text></g><g><title>&lt;ratatui::widgets::reflow::LineTruncator&lt;O,I&gt; as ratatui::widgets::reflow::LineComposer&gt;::next_line (491,536,931 samples, 30.94%)</title><rect x="30.1069%" y="229" width="30.9364%" height="15" fill="rgb(242,16,51)" fg:x="478357211" fg:w="491536931"/><text x="30.3569%" y="239.50">&lt;ratatui::widgets::reflow::LineTruncator&lt;O,I&gt; as r..</text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (82,298,575 samples, 5.18%)</title><rect x="55.8637%" y="213" width="5.1797%" height="15" fill="rgb(248,9,4)" fg:x="887595567" fg:w="82298575"/><text x="56.1137%" y="223.50">core::..</text></g><g><title>unicode_width::tables::lookup_width (6,410,295 samples, 0.40%)</title><rect x="60.6399%" y="197" width="0.4035%" height="15" fill="rgb(210,31,22)" fg:x="963483847" fg:w="6410295"/><text x="60.8899%" y="207.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (43,586,088 samples, 2.74%)</title><rect x="61.0434%" y="229" width="2.7432%" height="15" fill="rgb(239,54,39)" fg:x="969894143" fg:w="43586088"/><text x="61.2934%" y="239.50">co..</text></g><g><title>ratatui::buffer::buffer::Buffer::set_style (39,409,535 samples, 2.48%)</title><rect x="63.7866%" y="229" width="2.4804%" height="15" fill="rgb(230,99,41)" fg:x="1013480231" fg:w="39409535"/><text x="64.0366%" y="239.50">ra..</text></g><g><title>&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::Widget&gt;::render (769,675,723 samples, 48.44%)</title><rect x="26.3323%" y="261" width="48.4420%" height="15" fill="rgb(253,106,12)" fg:x="418383275" fg:w="769675723"/><text x="26.5823%" y="271.50">&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::Widget&gt;::render</text></g><g><title>&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::WidgetRef&gt;::render_ref (769,675,723 samples, 48.44%)</title><rect x="26.3323%" y="245" width="48.4420%" height="15" fill="rgb(213,46,41)" fg:x="418383275" fg:w="769675723"/><text x="26.5823%" y="255.50">&lt;ratatui::widgets::paragraph::Paragraph as ratatui::widgets::WidgetRef&gt;::render_..</text></g><g><title>ratatui::buffer::cell::Cell::set_symbol (135,169,232 samples, 8.51%)</title><rect x="66.2670%" y="229" width="8.5073%" height="15" fill="rgb(215,133,35)" fg:x="1052889766" fg:w="135169232"/><text x="66.5170%" y="239.50">ratatui::buf..</text></g><g><title>__memmove_avx_unaligned_erms (10,039,272 samples, 0.63%)</title><rect x="74.1424%" y="213" width="0.6319%" height="15" fill="rgb(213,28,5)" fg:x="1178019726" fg:w="10039272"/><text x="74.3924%" y="223.50"></text></g><g><title>alloc::str::join_generic_copy (3,328,553 samples, 0.21%)</title><rect x="74.7743%" y="261" width="0.2095%" height="15" fill="rgb(215,77,49)" fg:x="1188058998" fg:w="3328553"/><text x="75.0243%" y="271.50"></text></g><g><title>malloc (3,328,553 samples, 0.21%)</title><rect x="74.7743%" y="245" width="0.2095%" height="15" fill="rgb(248,100,22)" fg:x="1188058998" fg:w="3328553"/><text x="75.0243%" y="255.50"></text></g><g><title>_int_malloc (3,328,553 samples, 0.21%)</title><rect x="74.7743%" y="229" width="0.2095%" height="15" fill="rgb(208,67,9)" fg:x="1188058998" fg:w="3328553"/><text x="75.0243%" y="239.50"></text></g><g><title>malloc_consolidate (3,321,925 samples, 0.21%)</title><rect x="74.7747%" y="213" width="0.2091%" height="15" fill="rgb(219,133,21)" fg:x="1188065626" fg:w="3321925"/><text x="75.0247%" y="223.50"></text></g><g><title>cfree@GLIBC_2.2.5 (22,370,784 samples, 1.41%)</title><rect x="74.9838%" y="261" width="1.4080%" height="15" fill="rgb(246,46,29)" fg:x="1191387551" fg:w="22370784"/><text x="75.2338%" y="271.50"></text></g><g><title>_int_free (13,745,129 samples, 0.87%)</title><rect x="75.5267%" y="245" width="0.8651%" height="15" fill="rgb(246,185,52)" fg:x="1200013206" fg:w="13745129"/><text x="75.7767%" y="255.50"></text></g><g><title>_int_free_merge_chunk (277,777 samples, 0.02%)</title><rect x="76.3743%" y="229" width="0.0175%" height="15" fill="rgb(252,136,11)" fg:x="1213480558" fg:w="277777"/><text x="76.6243%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ratatui::widgets::paragraph::Paragraph&gt; (9,722,123 samples, 0.61%)</title><rect x="76.3917%" y="261" width="0.6119%" height="15" fill="rgb(219,138,53)" fg:x="1213758335" fg:w="9722123"/><text x="76.6417%" y="271.50"></text></g><g><title>cfree@GLIBC_2.2.5 (9,251,185 samples, 0.58%)</title><rect x="76.4214%" y="245" width="0.5823%" height="15" fill="rgb(211,51,23)" fg:x="1214229273" fg:w="9251185"/><text x="76.6714%" y="255.50"></text></g><g><title>_int_free (959,522 samples, 0.06%)</title><rect x="76.9433%" y="229" width="0.0604%" height="15" fill="rgb(247,221,28)" fg:x="1222520936" fg:w="959522"/><text x="77.1933%" y="239.50"></text></g><g><title>[unknown] (5,718,087 samples, 0.36%)</title><rect x="77.0050%" y="197" width="0.3599%" height="15" fill="rgb(251,222,45)" fg:x="1223502329" fg:w="5718087"/><text x="77.2550%" y="207.50"></text></g><g><title>[unknown] (5,718,087 samples, 0.36%)</title><rect x="77.0050%" y="181" width="0.3599%" height="15" fill="rgb(217,162,53)" fg:x="1223502329" fg:w="5718087"/><text x="77.2550%" y="191.50"></text></g><g><title>[unknown] (5,718,087 samples, 0.36%)</title><rect x="77.0050%" y="165" width="0.3599%" height="15" fill="rgb(229,93,14)" fg:x="1223502329" fg:w="5718087"/><text x="77.2550%" y="175.50"></text></g><g><title>[unknown] (5,718,087 samples, 0.36%)</title><rect x="77.0050%" y="149" width="0.3599%" height="15" fill="rgb(209,67,49)" fg:x="1223502329" fg:w="5718087"/><text x="77.2550%" y="159.50"></text></g><g><title>[unknown] (5,718,087 samples, 0.36%)</title><rect x="77.0050%" y="133" width="0.3599%" height="15" fill="rgb(213,87,29)" fg:x="1223502329" fg:w="5718087"/><text x="77.2550%" y="143.50"></text></g><g><title>[unknown] (5,711,758 samples, 0.36%)</title><rect x="77.0054%" y="117" width="0.3595%" height="15" fill="rgb(205,151,52)" fg:x="1223508658" fg:w="5711758"/><text x="77.2554%" y="127.50"></text></g><g><title>[unknown] (4,566,934 samples, 0.29%)</title><rect x="77.0775%" y="101" width="0.2874%" height="15" fill="rgb(253,215,39)" fg:x="1224653482" fg:w="4566934"/><text x="77.3275%" y="111.50"></text></g><g><title>[unknown] (4,566,934 samples, 0.29%)</title><rect x="77.0775%" y="85" width="0.2874%" height="15" fill="rgb(221,220,41)" fg:x="1224653482" fg:w="4566934"/><text x="77.3275%" y="95.50"></text></g><g><title>crossterm::terminal::size (5,742,138 samples, 0.36%)</title><rect x="77.0036%" y="261" width="0.3614%" height="15" fill="rgb(218,133,21)" fg:x="1223480458" fg:w="5742138"/><text x="77.2536%" y="271.50"></text></g><g><title>crossterm::terminal::sys::unix::size (5,742,138 samples, 0.36%)</title><rect x="77.0036%" y="245" width="0.3614%" height="15" fill="rgb(221,193,43)" fg:x="1223480458" fg:w="5742138"/><text x="77.2536%" y="255.50"></text></g><g><title>std::fs::OpenOptions::_open (5,720,267 samples, 0.36%)</title><rect x="77.0050%" y="229" width="0.3600%" height="15" fill="rgb(240,128,52)" fg:x="1223502329" fg:w="5720267"/><text x="77.2550%" y="239.50"></text></g><g><title>__GI___libc_open (5,720,267 samples, 0.36%)</title><rect x="77.0050%" y="213" width="0.3600%" height="15" fill="rgb(253,114,12)" fg:x="1223502329" fg:w="5720267"/><text x="77.2550%" y="223.50"></text></g><g><title>__memcmp_avx2_movbe (12,889,107 samples, 0.81%)</title><rect x="87.0918%" y="245" width="0.8112%" height="15" fill="rgb(215,223,47)" fg:x="1383766658" fg:w="12889107"/><text x="87.3418%" y="255.50"></text></g><g><title>ratatui::buffer::buffer::Buffer::diff (315,280,294 samples, 19.84%)</title><rect x="77.3650%" y="261" width="19.8432%" height="15" fill="rgb(248,225,23)" fg:x="1229222596" fg:w="315280294"/><text x="77.6150%" y="271.50">ratatui::buffer::buffer::Buffer..</text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (147,847,125 samples, 9.31%)</title><rect x="87.9030%" y="245" width="9.3052%" height="15" fill="rgb(250,108,0)" fg:x="1396655765" fg:w="147847125"/><text x="88.1530%" y="255.50">core::iter::t..</text></g><g><title>unicode_width::tables::lookup_width (25,297,230 samples, 1.59%)</title><rect x="95.6160%" y="229" width="1.5922%" height="15" fill="rgb(228,208,7)" fg:x="1519205660" fg:w="25297230"/><text x="95.8660%" y="239.50"></text></g><g><title>&lt;game_of_life::view::BasicPainter as game_of_life::view::Paint&gt;::paint (1,247,007,141 samples, 78.48%)</title><rect x="19.9136%" y="293" width="78.4844%" height="15" fill="rgb(244,45,10)" fg:x="316399080" fg:w="1247007141"/><text x="20.1636%" y="303.50">&lt;game_of_life::view::BasicPainter as game_of_life::view::Paint&gt;::paint</text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw (1,247,007,141 samples, 78.48%)</title><rect x="19.9136%" y="277" width="78.4844%" height="15" fill="rgb(207,125,25)" fg:x="316399080" fg:w="1247007141"/><text x="20.1636%" y="287.50">ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw</text></g><g><title>ratatui::buffer::buffer::Buffer::reset (18,903,331 samples, 1.19%)</title><rect x="97.2082%" y="261" width="1.1897%" height="15" fill="rgb(210,195,18)" fg:x="1544502890" fg:w="18903331"/><text x="97.4582%" y="271.50"></text></g><g><title>_ZN12game_of_life6runner3run46_$LT$impl$u20$game_of_life..runner..Runner$GT$3run28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hc0873d9f150a6babE.llvm.2868057869369755791 (1,250,172,527 samples, 78.68%)</title><rect x="19.7144%" y="309" width="78.6836%" height="15" fill="rgb(249,80,12)" fg:x="313234446" fg:w="1250172527"/><text x="19.9644%" y="319.50">_ZN12game_of_life6runner3run46_$LT$impl$u20$game_of_life..runner..Runner$GT$3run28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$..</text></g><g><title>[unknown] (453,025 samples, 0.03%)</title><rect x="98.4445%" y="245" width="0.0285%" height="15" fill="rgb(221,65,9)" fg:x="1564146132" fg:w="453025"/><text x="98.6945%" y="255.50"></text></g><g><title>[unknown] (190,786 samples, 0.01%)</title><rect x="98.4610%" y="229" width="0.0120%" height="15" fill="rgb(235,49,36)" fg:x="1564408371" fg:w="190786"/><text x="98.7110%" y="239.50"></text></g><g><title>[unknown] (190,786 samples, 0.01%)</title><rect x="98.4610%" y="213" width="0.0120%" height="15" fill="rgb(225,32,20)" fg:x="1564408371" fg:w="190786"/><text x="98.7110%" y="223.50"></text></g><g><title>[unknown] (190,786 samples, 0.01%)</title><rect x="98.4610%" y="197" width="0.0120%" height="15" fill="rgb(215,141,46)" fg:x="1564408371" fg:w="190786"/><text x="98.7110%" y="207.50"></text></g><g><title>[unknown] (190,786 samples, 0.01%)</title><rect x="98.4610%" y="181" width="0.0120%" height="15" fill="rgb(250,160,47)" fg:x="1564408371" fg:w="190786"/><text x="98.7110%" y="191.50"></text></g><g><title>[unknown] (190,783 samples, 0.01%)</title><rect x="98.4610%" y="165" width="0.0120%" height="15" fill="rgb(216,222,40)" fg:x="1564408374" fg:w="190783"/><text x="98.7110%" y="175.50"></text></g><g><title>[unknown] (190,783 samples, 0.01%)</title><rect x="98.4610%" y="149" width="0.0120%" height="15" fill="rgb(234,217,39)" fg:x="1564408374" fg:w="190783"/><text x="98.7110%" y="159.50"></text></g><g><title>crossterm::event::timeout::PollTimeout::leftover (314,294 samples, 0.02%)</title><rect x="98.4730%" y="245" width="0.0198%" height="15" fill="rgb(207,178,40)" fg:x="1564599175" fg:w="314294"/><text x="98.7230%" y="255.50"></text></g><g><title>std::time::Instant::elapsed (314,294 samples, 0.02%)</title><rect x="98.4730%" y="229" width="0.0198%" height="15" fill="rgb(221,136,13)" fg:x="1564599175" fg:w="314294"/><text x="98.7230%" y="239.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (314,294 samples, 0.02%)</title><rect x="98.4730%" y="213" width="0.0198%" height="15" fill="rgb(249,199,10)" fg:x="1564599175" fg:w="314294"/><text x="98.7230%" y="223.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (314,294 samples, 0.02%)</title><rect x="98.4730%" y="197" width="0.0198%" height="15" fill="rgb(249,222,13)" fg:x="1564599175" fg:w="314294"/><text x="98.7230%" y="207.50"></text></g><g><title>__vdso_clock_gettime (314,294 samples, 0.02%)</title><rect x="98.4730%" y="181" width="0.0198%" height="15" fill="rgb(244,185,38)" fg:x="1564599175" fg:w="314294"/><text x="98.7230%" y="191.50"></text></g><g><title>[unknown] (20,247,504 samples, 1.27%)</title><rect x="98.5486%" y="213" width="1.2743%" height="15" fill="rgb(236,202,9)" fg:x="1565799593" fg:w="20247504"/><text x="98.7986%" y="223.50"></text></g><g><title>[unknown] (20,247,488 samples, 1.27%)</title><rect x="98.5486%" y="197" width="1.2743%" height="15" fill="rgb(250,229,37)" fg:x="1565799609" fg:w="20247488"/><text x="98.7986%" y="207.50"></text></g><g><title>[unknown] (20,051,489 samples, 1.26%)</title><rect x="98.5609%" y="181" width="1.2620%" height="15" fill="rgb(206,174,23)" fg:x="1565995608" fg:w="20051489"/><text x="98.8109%" y="191.50"></text></g><g><title>[unknown] (17,444,214 samples, 1.10%)</title><rect x="98.7250%" y="165" width="1.0979%" height="15" fill="rgb(211,33,43)" fg:x="1568602883" fg:w="17444214"/><text x="98.9750%" y="175.50"></text></g><g><title>[unknown] (15,839,929 samples, 1.00%)</title><rect x="98.8260%" y="149" width="0.9969%" height="15" fill="rgb(245,58,50)" fg:x="1570207168" fg:w="15839929"/><text x="99.0760%" y="159.50"></text></g><g><title>[unknown] (12,768,010 samples, 0.80%)</title><rect x="99.0193%" y="133" width="0.8036%" height="15" fill="rgb(244,68,36)" fg:x="1573279087" fg:w="12768010"/><text x="99.2693%" y="143.50"></text></g><g><title>[unknown] (11,031,738 samples, 0.69%)</title><rect x="99.1286%" y="117" width="0.6943%" height="15" fill="rgb(232,229,15)" fg:x="1575015359" fg:w="11031738"/><text x="99.3786%" y="127.50"></text></g><g><title>[unknown] (8,817,837 samples, 0.55%)</title><rect x="99.2679%" y="101" width="0.5550%" height="15" fill="rgb(254,30,23)" fg:x="1577229260" fg:w="8817837"/><text x="99.5179%" y="111.50"></text></g><g><title>[unknown] (4,159,126 samples, 0.26%)</title><rect x="99.5612%" y="85" width="0.2618%" height="15" fill="rgb(235,160,14)" fg:x="1581887971" fg:w="4159126"/><text x="99.8112%" y="95.50"></text></g><g><title>[unknown] (2,362,584 samples, 0.15%)</title><rect x="99.6742%" y="69" width="0.1487%" height="15" fill="rgb(212,155,44)" fg:x="1583684513" fg:w="2362584"/><text x="99.9242%" y="79.50"></text></g><g><title>[unknown] (1,847,187 samples, 0.12%)</title><rect x="99.7067%" y="53" width="0.1163%" height="15" fill="rgb(226,2,50)" fg:x="1584199910" fg:w="1847187"/><text x="99.9567%" y="63.50"></text></g><g><title>[unknown] (173,082 samples, 0.01%)</title><rect x="99.8120%" y="37" width="0.0109%" height="15" fill="rgb(234,177,6)" fg:x="1585874015" fg:w="173082"/><text x="100.0620%" y="47.50"></text></g><g><title>mio::poll::Poll::poll (21,291,948 samples, 1.34%)</title><rect x="98.4928%" y="245" width="1.3401%" height="15" fill="rgb(217,24,9)" fg:x="1564913469" fg:w="21291948"/><text x="98.7428%" y="255.50"></text></g><g><title>epoll_wait (20,985,786 samples, 1.32%)</title><rect x="98.5121%" y="229" width="1.3208%" height="15" fill="rgb(220,13,46)" fg:x="1565219631" fg:w="20985786"/><text x="98.7621%" y="239.50"></text></g><g><title>&lt;crossterm::event::source::unix::mio::UnixInternalEventSource as crossterm::event::source::EventSource&gt;::try_read (22,280,524 samples, 1.40%)</title><rect x="98.4389%" y="261" width="1.4023%" height="15" fill="rgb(239,221,27)" fg:x="1564057229" fg:w="22280524"/><text x="98.6889%" y="271.50"></text></g><g><title>crossterm::event::read::InternalEventReader::poll (23,037,540 samples, 1.45%)</title><rect x="98.4264%" y="277" width="1.4499%" height="15" fill="rgb(222,198,25)" fg:x="1563858702" fg:w="23037540"/><text x="98.6764%" y="287.50"></text></g><g><title>std::time::Instant::elapsed (257,578 samples, 0.02%)</title><rect x="99.8602%" y="261" width="0.0162%" height="15" fill="rgb(211,99,13)" fg:x="1586638664" fg:w="257578"/><text x="100.1102%" y="271.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (257,578 samples, 0.02%)</title><rect x="99.8602%" y="245" width="0.0162%" height="15" fill="rgb(232,111,31)" fg:x="1586638664" fg:w="257578"/><text x="100.1102%" y="255.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (183,732 samples, 0.01%)</title><rect x="99.8893%" y="245" width="0.0116%" height="15" fill="rgb(245,82,37)" fg:x="1587101973" fg:w="183732"/><text x="100.1393%" y="255.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (183,732 samples, 0.01%)</title><rect x="99.8893%" y="229" width="0.0116%" height="15" fill="rgb(227,149,46)" fg:x="1587101973" fg:w="183732"/><text x="100.1393%" y="239.50"></text></g><g><title>crossterm::event::timeout::PollTimeout::leftover (552,241 samples, 0.03%)</title><rect x="99.8764%" y="277" width="0.0348%" height="15" fill="rgb(218,36,50)" fg:x="1586896242" fg:w="552241"/><text x="100.1264%" y="287.50"></text></g><g><title>std::time::Instant::elapsed (346,510 samples, 0.02%)</title><rect x="99.8893%" y="261" width="0.0218%" height="15" fill="rgb(226,80,48)" fg:x="1587101973" fg:w="346510"/><text x="100.1393%" y="271.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (162,778 samples, 0.01%)</title><rect x="99.9009%" y="245" width="0.0102%" height="15" fill="rgb(238,224,15)" fg:x="1587285705" fg:w="162778"/><text x="100.1509%" y="255.50"></text></g><g><title>crossterm::event::poll (23,668,626 samples, 1.49%)</title><rect x="98.4264%" y="293" width="1.4897%" height="15" fill="rgb(241,136,10)" fg:x="1563858365" fg:w="23668626"/><text x="98.6764%" y="303.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (167,269 samples, 0.01%)</title><rect x="99.9679%" y="245" width="0.0105%" height="15" fill="rgb(208,32,45)" fg:x="1588351056" fg:w="167269"/><text x="100.2179%" y="255.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (167,269 samples, 0.01%)</title><rect x="99.9679%" y="229" width="0.0105%" height="15" fill="rgb(207,135,9)" fg:x="1588351056" fg:w="167269"/><text x="100.2179%" y="239.50"></text></g><g><title>__vdso_clock_gettime (167,269 samples, 0.01%)</title><rect x="99.9679%" y="213" width="0.0105%" height="15" fill="rgb(206,86,44)" fg:x="1588351056" fg:w="167269"/><text x="100.2179%" y="223.50"></text></g><g><title>tokio::runtime::park::wake (1,185,793 samples, 0.07%)</title><rect x="99.9161%" y="277" width="0.0746%" height="15" fill="rgb(245,177,15)" fg:x="1587527504" fg:w="1185793"/><text x="100.1661%" y="287.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (440,264 samples, 0.03%)</title><rect x="99.9630%" y="261" width="0.0277%" height="15" fill="rgb(206,64,50)" fg:x="1588273033" fg:w="440264"/><text x="100.2130%" y="271.50"></text></g><g><title>syscall (194,972 samples, 0.01%)</title><rect x="99.9785%" y="245" width="0.0123%" height="15" fill="rgb(234,36,40)" fg:x="1588518325" fg:w="194972"/><text x="100.2285%" y="255.50"></text></g><g><title>[unknown] (190,709 samples, 0.01%)</title><rect x="99.9787%" y="229" width="0.0120%" height="15" fill="rgb(213,64,8)" fg:x="1588522588" fg:w="190709"/><text x="100.2287%" y="239.50"></text></g><g><title>[unknown] (190,709 samples, 0.01%)</title><rect x="99.9787%" y="213" width="0.0120%" height="15" fill="rgb(210,75,36)" fg:x="1588522588" fg:w="190709"/><text x="100.2287%" y="223.50"></text></g><g><title>[unknown] (190,709 samples, 0.01%)</title><rect x="99.9787%" y="197" width="0.0120%" height="15" fill="rgb(229,88,21)" fg:x="1588522588" fg:w="190709"/><text x="100.2287%" y="207.50"></text></g><g><title>[unknown] (190,709 samples, 0.01%)</title><rect x="99.9787%" y="181" width="0.0120%" height="15" fill="rgb(252,204,47)" fg:x="1588522588" fg:w="190709"/><text x="100.2287%" y="191.50"></text></g><g><title>[unknown] (190,709 samples, 0.01%)</title><rect x="99.9787%" y="165" width="0.0120%" height="15" fill="rgb(208,77,27)" fg:x="1588522588" fg:w="190709"/><text x="100.2287%" y="175.50"></text></g><g><title>_ZN12game_of_life6runner3run46_$LT$impl$u20$game_of_life..runner..Runner$GT$3run28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17he1d1e71dd83cfb25E.llvm.2868057869369755791 (25,438,801 samples, 1.60%)</title><rect x="98.3980%" y="309" width="1.6011%" height="15" fill="rgb(221,76,26)" fg:x="1563406973" fg:w="25438801"/><text x="98.6480%" y="319.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::_{{closure}} (1,318,771 samples, 0.08%)</title><rect x="99.9161%" y="293" width="0.0830%" height="15" fill="rgb(225,139,18)" fg:x="1587527003" fg:w="1318771"/><text x="100.1661%" y="303.50"></text></g><g><title>all (1,588,860,530 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(230,137,11)" fg:x="0" fg:w="1588860530"/><text x="0.2500%" y="591.50"></text></g><g><title>tokio-runtime-w (1,330,789,810 samples, 83.76%)</title><rect x="16.2425%" y="565" width="83.7575%" height="15" fill="rgb(212,28,1)" fg:x="258070720" fg:w="1330789810"/><text x="16.4925%" y="575.50">tokio-runtime-w</text></g><g><title>clone3 (1,330,543,218 samples, 83.74%)</title><rect x="16.2580%" y="549" width="83.7420%" height="15" fill="rgb(248,164,17)" fg:x="258317312" fg:w="1330543218"/><text x="16.5080%" y="559.50">clone3</text></g><g><title>start_thread (1,330,543,218 samples, 83.74%)</title><rect x="16.2580%" y="533" width="83.7420%" height="15" fill="rgb(222,171,42)" fg:x="258317312" fg:w="1330543218"/><text x="16.5080%" y="543.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (1,330,543,218 samples, 83.74%)</title><rect x="16.2580%" y="517" width="83.7420%" height="15" fill="rgb(243,84,45)" fg:x="258317312" fg:w="1330543218"/><text x="16.5080%" y="527.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,330,543,218 samples, 83.74%)</title><rect x="16.2580%" y="501" width="83.7420%" height="15" fill="rgb(252,49,23)" fg:x="258317312" fg:w="1330543218"/><text x="16.5080%" y="511.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1,330,543,218 samples, 83.74%)</title><rect x="16.2580%" y="485" width="83.7420%" height="15" fill="rgb(215,19,7)" fg:x="258317312" fg:w="1330543218"/><text x="16.5080%" y="495.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1,330,543,218 samples, 83.74%)</title><rect x="16.2580%" y="469" width="83.7420%" height="15" fill="rgb(238,81,41)" fg:x="258317312" fg:w="1330543218"/><text x="16.5080%" y="479.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,330,077,001 samples, 83.71%)</title><rect x="16.2874%" y="453" width="83.7126%" height="15" fill="rgb(210,199,37)" fg:x="258783529" fg:w="1330077001"/><text x="16.5374%" y="463.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,330,077,001 samples, 83.71%)</title><rect x="16.2874%" y="437" width="83.7126%" height="15" fill="rgb(244,192,49)" fg:x="258783529" fg:w="1330077001"/><text x="16.5374%" y="447.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1,330,077,001 samples, 83.71%)</title><rect x="16.2874%" y="421" width="83.7126%" height="15" fill="rgb(226,211,11)" fg:x="258783529" fg:w="1330077001"/><text x="16.5374%" y="431.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (1,330,077,001 samples, 83.71%)</title><rect x="16.2874%" y="405" width="83.7126%" height="15" fill="rgb(236,162,54)" fg:x="258783529" fg:w="1330077001"/><text x="16.5374%" y="415.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1,330,077,001 samples, 83.71%)</title><rect x="16.2874%" y="389" width="83.7126%" height="15" fill="rgb(220,229,9)" fg:x="258783529" fg:w="1330077001"/><text x="16.5374%" y="399.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (1,330,042,719 samples, 83.71%)</title><rect x="16.2895%" y="373" width="83.7105%" height="15" fill="rgb(250,87,22)" fg:x="258817811" fg:w="1330042719"/><text x="16.5395%" y="383.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1,289,488,855 samples, 81.16%)</title><rect x="18.8419%" y="357" width="81.1581%" height="15" fill="rgb(239,43,17)" fg:x="299371675" fg:w="1289488855"/><text x="19.0919%" y="367.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,287,171,131 samples, 81.01%)</title><rect x="18.9878%" y="341" width="81.0122%" height="15" fill="rgb(231,177,25)" fg:x="301689399" fg:w="1287171131"/><text x="19.2378%" y="351.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (1,287,171,131 samples, 81.01%)</title><rect x="18.9878%" y="325" width="81.0122%" height="15" fill="rgb(219,179,1)" fg:x="301689399" fg:w="1287171131"/><text x="19.2378%" y="335.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g></svg></svg>